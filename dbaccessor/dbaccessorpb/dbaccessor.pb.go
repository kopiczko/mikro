// Code generated by protoc-gen-go.
// source: dbaccessor.proto
// DO NOT EDIT!

/*
Package dbaccessorpb is a generated protocol buffer package.

It is generated from these files:
	dbaccessor.proto

It has these top-level messages:
	UserRequest
	UserResponse
*/
package dbaccessorpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// User's name.
type UserRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
}

func (m *UserRequest) Reset()                    { *m = UserRequest{} }
func (m *UserRequest) String() string            { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()               {}
func (*UserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Complete user profile.
type UserResponse struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
}

func (m *UserResponse) Reset()                    { *m = UserResponse{} }
func (m *UserResponse) String() string            { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()               {}
func (*UserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*UserRequest)(nil), "dbaccessorpb.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "dbaccessorpb.UserResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UserService service

type UserServiceClient interface {
	// Returns detailed user profile.
	GetUser(ctx context.Context, in *UserRequest, opts ...client.CallOption) (*UserResponse, error)
}

type userServiceClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceClient(serviceName string, c client.Client) UserServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "dbaccessorpb"
	}
	return &userServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *UserRequest, opts ...client.CallOption) (*UserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetUser", in)
	out := new(UserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceHandler interface {
	// Returns detailed user profile.
	GetUser(context.Context, *UserRequest, *UserResponse) error
}

func RegisterUserServiceHandler(s server.Server, hdlr UserServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserService{hdlr}, opts...))
}

type UserService struct {
	UserServiceHandler
}

func (h *UserService) GetUser(ctx context.Context, in *UserRequest, out *UserResponse) error {
	return h.UserServiceHandler.GetUser(ctx, in, out)
}

func init() { proto.RegisterFile("dbaccessor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x48, 0x49, 0x4a, 0x4c,
	0x4e, 0x4e, 0x2d, 0x2e, 0xce, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x41, 0x88,
	0x14, 0x24, 0x29, 0x69, 0x72, 0x71, 0x87, 0x16, 0xa7, 0x16, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x49, 0x71, 0x71, 0x94, 0x16, 0xa7, 0x16, 0xe5, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0xc1, 0xf9, 0x4a, 0xf6, 0x5c, 0x3c, 0x10, 0xa5, 0xc5, 0x05, 0xf9, 0x79,
	0xc5, 0xa9, 0x42, 0x42, 0x5c, 0x2c, 0x48, 0xea, 0xc0, 0x6c, 0x21, 0x69, 0x2e, 0xce, 0xb4, 0xd2,
	0x9c, 0x9c, 0x78, 0xb0, 0x04, 0x13, 0xc4, 0x00, 0x90, 0x80, 0x5f, 0x62, 0x6e, 0xaa, 0x51, 0x20,
	0xc4, 0xae, 0xe0, 0xd4, 0xa2, 0xb2, 0xcc, 0xe4, 0x54, 0x21, 0x27, 0x2e, 0x76, 0xf7, 0xd4, 0x12,
	0x90, 0x88, 0x90, 0xa4, 0x1e, 0xb2, 0xa3, 0xf4, 0x90, 0x5c, 0x24, 0x25, 0x85, 0x4d, 0x0a, 0xe2,
	0x02, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x9f, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x34, 0x70,
	0x40, 0x7b, 0xe7, 0x00, 0x00, 0x00,
}
